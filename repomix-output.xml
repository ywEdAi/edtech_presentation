This file is a merged representation of the entire codebase, combined into a single document by Repomix.

<file_summary>
This section contains a summary of this file.

<purpose>
This file contains a packed representation of the entire repository's contents.
It is designed to be easily consumable by AI systems for analysis, code review,
or other automated processes.
</purpose>

<file_format>
The content is organized as follows:
1. This summary section
2. Repository information
3. Directory structure
4. Repository files, each consisting of:
  - File path as an attribute
  - Full contents of the file
</file_format>

<usage_guidelines>
- This file should be treated as read-only. Any changes should be made to the
  original repository files, not this packed version.
- When processing this file, use the file path to distinguish
  between different files in the repository.
- Be aware that this file may contain sensitive information. Handle it with
  the same level of security as you would the original repository.
</usage_guidelines>

<notes>
- Some files may have been excluded based on .gitignore rules and Repomix's configuration
- Binary files are not included in this packed representation. Please refer to the Repository Structure section for a complete list of file paths, including binary files
- Files matching patterns in .gitignore are excluded
- Files matching default ignore patterns are excluded
- Files are sorted by Git change count (files with more changes are at the bottom)
</notes>

<additional_info>

</additional_info>

</file_summary>

<directory_structure>
app/
  globals.css
  layout.tsx
  page.tsx
components/
  ui/
    card.tsx
  FlashCard.tsx
  SlideCard.tsx
lib/
  slides.ts
  utils.ts
public/
  file.svg
  globe.svg
  next.svg
  vercel.svg
  window.svg
.gitignore
next.config.ts
package.json
postcss.config.js
postcss.config.mjs
README.md
tsconfig.json
</directory_structure>

<files>
This section contains the contents of the repository's files.

<file path="components/ui/card.tsx">
import * as React from "react"

import { cn } from "@/lib/utils"

const Card = React.forwardRef<
  HTMLDivElement,
  React.HTMLAttributes<HTMLDivElement>
>(({ className, ...props }, ref) => (
  <div
    ref={ref}
    className={cn(
      "rounded-lg border bg-white text-slate-950 shadow-sm",
      className
    )}
    {...props}
  />
))
Card.displayName = "Card"

function CardHeader({
  className,
  ...props
}: React.HTMLAttributes<HTMLDivElement>) {
  return (
    <div
      className={cn("flex flex-col space-y-1.5 p-6", className)}
      {...props}
    />
  )
}

function CardTitle({
  className,
  ...props
}: React.HTMLAttributes<HTMLHeadingElement>) {
  return (
    <h3
      className={cn("text-2xl font-semibold leading-none tracking-tight", className)}
      {...props}
    />
  )
}

function CardContent({
  className,
  ...props
}: React.HTMLAttributes<HTMLDivElement>) {
  return (
    <div
      className={cn("p-6 pt-0", className)}
      {...props}
    />
  )
}

// ... 还有 CardFooter 等其他部分

export { Card, CardHeader, CardTitle, CardContent }
</file>

<file path="components/FlashCard.tsx">
'use client'

import { motion } from 'framer-motion'
import { useState } from 'react'

type FlashCardProps = {
  front: React.ReactNode
  back: React.ReactNode
}

export default function FlashCard({ front, back }: FlashCardProps) {
  const [flipped, setFlipped] = useState(false)

  return (
    <div
      className="relative w-80 h-56 cursor-pointer perspective-1000"
      onClick={() => setFlipped(!flipped)}
    >
      {/* 正面 */}
      <motion.div
        className="absolute w-full h-full bg-white shadow-xl rounded-md flex items-center justify-center backface-hidden"
        style={{ backfaceVisibility: 'hidden' }}
        animate={{ rotateY: flipped ? 180 : 0 }}
        transition={{ duration: 0.5 }}
      >
        {front}
      </motion.div>

      {/* 反面 */}
      <motion.div
        className="absolute w-full h-full bg-white shadow-xl rounded-md flex items-center justify-center"
        style={{ transform: 'rotateY(180deg)', backfaceVisibility: 'hidden' }}
        animate={{ rotateY: flipped ? 360 : 180 }}
        transition={{ duration: 0.5 }}
      >
        {back}
      </motion.div>
    </div>
  )
}
</file>

<file path="components/SlideCard.tsx">
import { Slide } from '@/lib/slides'
import { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card'
import Image from 'next/image'

type Props = {
  slide: Slide
}

export default function SlideCard({ slide }: Props) {
  return (
    <Card className="border border-gray-100 hover:shadow-2xl hover:scale-105 transform transition w-full">
      <CardHeader>
        <CardTitle className="text-blue-600 text-xl font-bold">
          {slide.title}
        </CardTitle>
      </CardHeader>
      <CardContent className="flex flex-col space-y-3">

        {/* 如果有图片数组，展示它们 */}
        {slide.images && slide.images.length > 0 && (
          <div className="flex flex-wrap gap-4">
            {slide.images.map((imgUrl, i) => (
              <div key={i} className="relative w-48 h-32 rounded-md overflow-hidden">
                <Image
                  src={imgUrl}
                  alt={`Slide ${slide.id} image ${i}`}
                  fill  // 或者用 width/height + objectFit
                  className="object-cover"
                />
              </div>
            ))}
          </div>
        )}

        {/* 主要展示内容 */}
        <h3 className="font-semibold text-lg text-gray-800">
          {slide.content.heading}
        </h3>
        <ul className="list-disc list-inside text-gray-700 space-y-1">
          {slide.content.bullets.map((item, index) => {
            if (typeof item === 'string') {
              return <li key={index}>{item}</li>
            } else {
              return (
                <li key={index}>
                  {item.bullet}
                  {item.subBullets && (
                    <ul className="list-disc list-inside ml-5 text-sm text-gray-600 space-y-1 mt-1">
                      {item.subBullets.map((sub, subIndex) => (
                        <li key={subIndex}>{sub}</li>
                      ))}
                    </ul>
                  )}
                </li>
              )
            }
          })}
        </ul>
      </CardContent>
    </Card>
  )
}
</file>

<file path="lib/slides.ts">
// lib/slides.ts
export type Slide = {
    id: number
    title: string
    content: {
      heading: string
      bullets: Array<string | { bullet: string; subBullets?: string[] }>
    }
  }
  
  export const slides: Slide[] = [
    {
      id: 1,
      title: 'Slide 1. 封面',
      content: {
        heading: '主要展示内容',
        bullets: [
          '标题：独立开发与小团队在 AI+教育中的创新实践',
          '副标题：从产品开发模式到“知识审美”的教育思考',
          '演讲者信息：XXX（你的名字 / 职称 / 机构）; 哥伦比亚大学教育论坛，20XX年XX月XX日',
        ],
      },
    },
    {
      id: 2,
      title: 'Slide 2. 议程 / Agenda',
      content: {
        heading: '主要展示内容',
        bullets: [
          {
            bullet: '引言与背景：AI 与教育的交汇',
          },
          {
            bullet: '技术与教育学的结合',
            subBullets: [
              'TPACK 框架',
              'TPACK 在 GenAI 时代的应用',
            ],
          },
          {
            bullet: '产品开发关键模式与市场演变',
            subBullets: [
              '技术驱动 vs. 数据驱动',
              '小团队 vs. 大团队',
              '个人需求驱动 vs. 市场调研驱动',
              '“套壳”短期效应 vs. 长期价值',
              'Pre-PMF 阶段的挑战与策略',
            ],
          },
          {
            bullet: '知识审美：AI 时代的教育哲思',
          },
          {
            bullet: '人文与思维的发散性讨论（四组对照）',
          },
          {
            bullet: '总结与 Q&A',
          },
        ],
      },
    },
    {
      id: 3,
      title: 'Slide 3. 引言与背景：AI 与教育的交汇',
      content: {
        heading: '主要展示内容',
        bullets: [
          {
            bullet: 'AI 在教育：寒武纪大爆发',
            subBullets: [
              '大模型（如 ChatGPT）加速落地教学场景',
              '备课、答疑、个性化学习等应用层出不穷',
            ],
          },
          {
            bullet: '关注“小团队 / 独立开发者”的原因',
            subBullets: [
              '技术门槛降低：开源大模型、云服务便捷集成',
              '细分场景与创新速度：灵活抢占市场空缺',
            ],
          },
        ],
      },
    },
    // ...可按同样格式添加剩余Slide 4 ~ Slide 18
  ]
</file>

<file path="lib/utils.ts">
// lib/utils.ts
export function cn(...classes: (string | undefined | false)[]): string {
    return classes.filter(Boolean).join(' ');
  }
</file>

<file path="postcss.config.js">
module.exports = {
    plugins: [
      require('@tailwindcss/postcss'),
      require('autoprefixer'),
    ],
  }
</file>

<file path="app/globals.css">
@import "tailwindcss";

:root {
  --background: #ffffff;
  --foreground: #171717;
}

@theme inline {
  --color-background: var(--background);
  --color-foreground: var(--foreground);
  --font-sans: var(--font-geist-sans);
  --font-mono: var(--font-geist-mono);
}

@media (prefers-color-scheme: dark) {
  :root {
    --background: #0a0a0a;
    --foreground: #ededed;
  }
}

body {
  background: var(--background);
  color: var(--foreground);
  font-family: Arial, Helvetica, sans-serif;
}

@tailwind base;
@tailwind components;
@tailwind utilities;
</file>

<file path="app/layout.tsx">
import './globals.css'
import type { Metadata } from 'next'
import { Inter } from 'next/font/google'

const inter = Inter({ subsets: ['latin'] })

export const metadata: Metadata = {
  title: 'AI+教育创新实践 | TPACK框架探索',
  description: '一个使用Next.js 13 + Tailwind + shadcn/ui的示例项目',
}

export default function RootLayout({
  children,
}: {
  children: React.ReactNode
}) {
  return (
    <html lang="zh">
      <body className={`${inter.className} bg-gray-50 min-h-screen`}>
        {children}
      </body>
    </html>
  )
}
</file>

<file path="app/page.tsx">
'use client'

import { useState } from 'react'
import { slides } from '@/lib/slides'
import SlideCard from '@/components/SlideCard'

export default function HomePage() {
  const [currentIndex, setCurrentIndex] = useState(0)

  const handlePrev = () => {
    setCurrentIndex((prev) => (prev > 0 ? prev - 1 : slides.length - 1))
  }
  const handleNext = () => {
    setCurrentIndex((prev) => (prev < slides.length - 1 ? prev + 1 : 0))
  }

  return (
    <main className="container mx-auto p-4 flex flex-col items-center">
      <h1 className="text-3xl font-bold text-primary mb-4">AI+教育创新实践</h1>
      
      {/* 只渲染当前索引的 SlideCard */}
      <div className="w-full max-w-xl">
        <SlideCard slide={slides[currentIndex]} />
      </div>

      {/* 控制按钮 */}
      <div className="flex gap-4 mt-6">
        <button
          onClick={handlePrev}
          className="px-4 py-2 bg-secondary text-white rounded-md hover:opacity-80"
        >
          上一页
        </button>
        <button
          onClick={handleNext}
          className="px-4 py-2 bg-primary text-white rounded-md hover:opacity-80"
        >
          下一页
        </button>
      </div>
    </main>
  )
}
</file>

<file path="public/file.svg">
<svg fill="none" viewBox="0 0 16 16" xmlns="http://www.w3.org/2000/svg"><path d="M14.5 13.5V5.41a1 1 0 0 0-.3-.7L9.8.29A1 1 0 0 0 9.08 0H1.5v13.5A2.5 2.5 0 0 0 4 16h8a2.5 2.5 0 0 0 2.5-2.5m-1.5 0v-7H8v-5H3v12a1 1 0 0 0 1 1h8a1 1 0 0 0 1-1M9.5 5V2.12L12.38 5zM5.13 5h-.62v1.25h2.12V5zm-.62 3h7.12v1.25H4.5zm.62 3h-.62v1.25h7.12V11z" clip-rule="evenodd" fill="#666" fill-rule="evenodd"/></svg>
</file>

<file path="public/globe.svg">
<svg fill="none" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 16 16"><g clip-path="url(#a)"><path fill-rule="evenodd" clip-rule="evenodd" d="M10.27 14.1a6.5 6.5 0 0 0 3.67-3.45q-1.24.21-2.7.34-.31 1.83-.97 3.1M8 16A8 8 0 1 0 8 0a8 8 0 0 0 0 16m.48-1.52a7 7 0 0 1-.96 0H7.5a4 4 0 0 1-.84-1.32q-.38-.89-.63-2.08a40 40 0 0 0 3.92 0q-.25 1.2-.63 2.08a4 4 0 0 1-.84 1.31zm2.94-4.76q1.66-.15 2.95-.43a7 7 0 0 0 0-2.58q-1.3-.27-2.95-.43a18 18 0 0 1 0 3.44m-1.27-3.54a17 17 0 0 1 0 3.64 39 39 0 0 1-4.3 0 17 17 0 0 1 0-3.64 39 39 0 0 1 4.3 0m1.1-1.17q1.45.13 2.69.34a6.5 6.5 0 0 0-3.67-3.44q.65 1.26.98 3.1M8.48 1.5l.01.02q.41.37.84 1.31.38.89.63 2.08a40 40 0 0 0-3.92 0q.25-1.2.63-2.08a4 4 0 0 1 .85-1.32 7 7 0 0 1 .96 0m-2.75.4a6.5 6.5 0 0 0-3.67 3.44 29 29 0 0 1 2.7-.34q.31-1.83.97-3.1M4.58 6.28q-1.66.16-2.95.43a7 7 0 0 0 0 2.58q1.3.27 2.95.43a18 18 0 0 1 0-3.44m.17 4.71q-1.45-.12-2.69-.34a6.5 6.5 0 0 0 3.67 3.44q-.65-1.27-.98-3.1" fill="#666"/></g><defs><clipPath id="a"><path fill="#fff" d="M0 0h16v16H0z"/></clipPath></defs></svg>
</file>

<file path="public/next.svg">
<svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 394 80"><path fill="#000" d="M262 0h68.5v12.7h-27.2v66.6h-13.6V12.7H262V0ZM149 0v12.7H94v20.4h44.3v12.6H94v21h55v12.6H80.5V0h68.7zm34.3 0h-17.8l63.8 79.4h17.9l-32-39.7 32-39.6h-17.9l-23 28.6-23-28.6zm18.3 56.7-9-11-27.1 33.7h17.8l18.3-22.7z"/><path fill="#000" d="M81 79.3 17 0H0v79.3h13.6V17l50.2 62.3H81Zm252.6-.4c-1 0-1.8-.4-2.5-1s-1.1-1.6-1.1-2.6.3-1.8 1-2.5 1.6-1 2.6-1 1.8.3 2.5 1a3.4 3.4 0 0 1 .6 4.3 3.7 3.7 0 0 1-3 1.8zm23.2-33.5h6v23.3c0 2.1-.4 4-1.3 5.5a9.1 9.1 0 0 1-3.8 3.5c-1.6.8-3.5 1.3-5.7 1.3-2 0-3.7-.4-5.3-1s-2.8-1.8-3.7-3.2c-.9-1.3-1.4-3-1.4-5h6c.1.8.3 1.6.7 2.2s1 1.2 1.6 1.5c.7.4 1.5.5 2.4.5 1 0 1.8-.2 2.4-.6a4 4 0 0 0 1.6-1.8c.3-.8.5-1.8.5-3V45.5zm30.9 9.1a4.4 4.4 0 0 0-2-3.3 7.5 7.5 0 0 0-4.3-1.1c-1.3 0-2.4.2-3.3.5-.9.4-1.6 1-2 1.6a3.5 3.5 0 0 0-.3 4c.3.5.7.9 1.3 1.2l1.8 1 2 .5 3.2.8c1.3.3 2.5.7 3.7 1.2a13 13 0 0 1 3.2 1.8 8.1 8.1 0 0 1 3 6.5c0 2-.5 3.7-1.5 5.1a10 10 0 0 1-4.4 3.5c-1.8.8-4.1 1.2-6.8 1.2-2.6 0-4.9-.4-6.8-1.2-2-.8-3.4-2-4.5-3.5a10 10 0 0 1-1.7-5.6h6a5 5 0 0 0 3.5 4.6c1 .4 2.2.6 3.4.6 1.3 0 2.5-.2 3.5-.6 1-.4 1.8-1 2.4-1.7a4 4 0 0 0 .8-2.4c0-.9-.2-1.6-.7-2.2a11 11 0 0 0-2.1-1.4l-3.2-1-3.8-1c-2.8-.7-5-1.7-6.6-3.2a7.2 7.2 0 0 1-2.4-5.7 8 8 0 0 1 1.7-5 10 10 0 0 1 4.3-3.5c2-.8 4-1.2 6.4-1.2 2.3 0 4.4.4 6.2 1.2 1.8.8 3.2 2 4.3 3.4 1 1.4 1.5 3 1.5 5h-5.8z"/></svg>
</file>

<file path="public/vercel.svg">
<svg fill="none" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 1155 1000"><path d="m577.3 0 577.4 1000H0z" fill="#fff"/></svg>
</file>

<file path="public/window.svg">
<svg fill="none" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 16 16"><path fill-rule="evenodd" clip-rule="evenodd" d="M1.5 2.5h13v10a1 1 0 0 1-1 1h-11a1 1 0 0 1-1-1zM0 1h16v11.5a2.5 2.5 0 0 1-2.5 2.5h-11A2.5 2.5 0 0 1 0 12.5zm3.75 4.5a.75.75 0 1 0 0-1.5.75.75 0 0 0 0 1.5M7 4.75a.75.75 0 1 1-1.5 0 .75.75 0 0 1 1.5 0m1.75.75a.75.75 0 1 0 0-1.5.75.75 0 0 0 0 1.5" fill="#666"/></svg>
</file>

<file path=".gitignore">
# See https://help.github.com/articles/ignoring-files/ for more about ignoring files.

# dependencies
/node_modules
/.pnp
.pnp.*
.yarn/*
!.yarn/patches
!.yarn/plugins
!.yarn/releases
!.yarn/versions

# testing
/coverage

# next.js
/.next/
/out/

# production
/build

# misc
.DS_Store
*.pem

# debug
npm-debug.log*
yarn-debug.log*
yarn-error.log*
.pnpm-debug.log*

# env files (can opt-in for committing if needed)
.env*

# vercel
.vercel

# typescript
*.tsbuildinfo
next-env.d.ts
</file>

<file path="next.config.ts">
import type { NextConfig } from "next";

const nextConfig: NextConfig = {
  /* config options here */
};

export default nextConfig;
</file>

<file path="package.json">
{
  "name": "ai-education-ppt",
  "version": "0.1.0",
  "private": true,
  "scripts": {
    "dev": "next dev",
    "build": "next build",
    "start": "next start",
    "lint": "next lint"
  },
  "dependencies": {
    "@radix-ui/react-icons": "^1.3.2",
    "@radix-ui/react-slot": "^1.1.2",
    "class-variance-authority": "^0.7.1",
    "clsx": "^2.1.1",
    "framer-motion": "^12.6.2",
    "lucide-react": "^0.484.0",
    "next": "15.2.4",
    "react": "^19.0.0",
    "react-dom": "^19.0.0",
    "tailwind-merge": "^3.0.2"
  },
  "devDependencies": {
    "@tailwindcss/postcss": "^4.0.17",
    "@types/node": "^20",
    "@types/react": "^19",
    "@types/react-dom": "^19",
    "autoprefixer": "^10.4.21",
    "postcss": "^8.5.3",
    "tailwindcss": "^4.0.17",
    "typescript": "^5"
  }
}
</file>

<file path="postcss.config.mjs">
const config = {
  plugins: ["@tailwindcss/postcss"],
};

export default config;
</file>

<file path="README.md">
This is a [Next.js](https://nextjs.org) project bootstrapped with [`create-next-app`](https://nextjs.org/docs/app/api-reference/cli/create-next-app).

## Getting Started

First, run the development server:

```bash
npm run dev
# or
yarn dev
# or
pnpm dev
# or
bun dev
```

Open [http://localhost:3000](http://localhost:3000) with your browser to see the result.

You can start editing the page by modifying `app/page.tsx`. The page auto-updates as you edit the file.

This project uses [`next/font`](https://nextjs.org/docs/app/building-your-application/optimizing/fonts) to automatically optimize and load [Geist](https://vercel.com/font), a new font family for Vercel.

## Learn More

To learn more about Next.js, take a look at the following resources:

- [Next.js Documentation](https://nextjs.org/docs) - learn about Next.js features and API.
- [Learn Next.js](https://nextjs.org/learn) - an interactive Next.js tutorial.

You can check out [the Next.js GitHub repository](https://github.com/vercel/next.js) - your feedback and contributions are welcome!

## Deploy on Vercel

The easiest way to deploy your Next.js app is to use the [Vercel Platform](https://vercel.com/new?utm_medium=default-template&filter=next.js&utm_source=create-next-app&utm_campaign=create-next-app-readme) from the creators of Next.js.

Check out our [Next.js deployment documentation](https://nextjs.org/docs/app/building-your-application/deploying) for more details.
</file>

<file path="tsconfig.json">
{
  "compilerOptions": {
    "target": "ES2017",
    "lib": ["dom", "dom.iterable", "esnext"],
    "allowJs": true,
    "skipLibCheck": true,
    "strict": true,
    "noEmit": true,
    "esModuleInterop": true,
    "module": "esnext",
    "moduleResolution": "bundler",
    "resolveJsonModule": true,
    "isolatedModules": true,
    "jsx": "preserve",
    "incremental": true,
    "plugins": [
      {
        "name": "next"
      }
    ],
    "paths": {
      "@/*": ["./*"]
    }
  },
  "include": ["next-env.d.ts", "**/*.ts", "**/*.tsx", ".next/types/**/*.ts"],
  "exclude": ["node_modules"]
}
</file>

</files>
